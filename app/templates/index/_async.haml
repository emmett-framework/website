.home-block.py-6.border-t.border-gray-300.bgcolor-gray-2{class: "dark:bg-gray-800 dark:border-gray-700"}
    .container.flex.flex-wrap.w-full.mx-auto
        %div{class: "port:w-full land:w-1/2 px-6"}
            .flex.flex-wrap
                %h5.hint.w-full.mt-1.mb-1.flex.font-rlw.font-semibold.text-sm.text-left.text-indigo-600.uppercase{class: "dark:text-indigo-300"}
                    Go asynchronous
                %h2.w-full.mt-1.mb-6.flex.font-ssp.font-light.text-3xl.color-blue-6{class: "dark:text-blue-400"}
                    Enjoy sockets
            .flex.flex-wrap
                %p.w-full.mb-4.font-light
                    Emmett is designed on top of latest
                    %em asyncio
                    Python technology.
                %p.w-full.mb-4.font-light
                    The whole request flow in Emmett is fully asynchronous, so you can easily take advantage
                    of asynchronous and non-blocking code in your application flow.
                %p.w-full.font-light
                    Need to listen for latest time travels happening in your time? With Emmett you can
                    %a.big{href: "{{ =url('docs.page', ['latest', 'websocket']) }}"}
                        handle websockets
                    in a few lines, without bothering about handling the parallelism.
        %div{class: "port:w-full land:w-1/2 px-6"}
            .terminal.dark
                .top-bar
                    .dots
                        .dot
                        .dot
                        .dot
                .content
                    %pre
                        %code{language: "python"}
                            = code_blocks.async_code
